name: test package
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    name: Run tests with pytest
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        os: [ubuntu-latest, macos-latest, windows-latest]
        torch-version: ["1.8.0", "1.11.0", "2.0.0", "2.1.0"]
        exclude:
          - python-version: "3.11"
            torch-version: "1.8.0"
          - python-version: "3.11"
            torch-version: "1.11.0"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install ffmpeg
      - name: Install specified version of PyTorch (Windows)
        id: windows_torch_installation
        if: matrix.os == 'windows-latest'
        env:
          TORCH_VERSION: ${{ matrix.torch-version }}
        run: |
          python -m pip install --upgrade pip
          pip install torch==${env:TORCH_VERSION}
      - name: Install specified version of PyTorch (Ubuntu & MacOS)
        if: steps.windows_torch_installation.conclusion == 'skipped'
        env:
          TORCH_VERSION: ${{ matrix.torch-version }}
        run: |
          python -m pip install --upgrade pip
          pip install torch==${TORCH_VERSION}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev,tests]"
      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          pip install soundfile
      - name: Pytest
        run: |
          pytest -vvv --cov=audyn/ --cov-report=xml tests/package/
